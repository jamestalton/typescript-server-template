name: build

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]
    schedule:
        - cron: '0 16 * * *'
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Set up Git
              run: |
                  git config --global user.name "${GITHUB_ACTOR}"
                  git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

            - name: Set up Node.js 14.x
              uses: actions/setup-node@v1
              with:
                  node-version: 14.x

            - name: Update Dependencies
              if: github.event_name == 'schedule'
              run: |
                  rm -rf package-lock.json node_modules
                  npx npm-check-updates --doctor -u
                  npm install
                  npm audit fix
                  npm run lint:fix
                  npm run check:fix
                  git add -u :/
                  set +e
                  git commit -m "update dependencies"
                  echo "SKIP=$?" >> $GITHUB_ENV

            - name: Update Version
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              run: |
                  npm version patch
                  NAME=`cat package.json | jq -r .name`
                  VERSION=v`cat package.json | jq -r .version`
                  echo "VERSION=${VERSION}" >> $GITHUB_ENV
                  echo "NAME=${NAME}" >> $GITHUB_ENV

            - name: Install Dependencies
              if: env.SKIP != '1'
              run: npm ci

            - name: Unit Tests
              if: env.SKIP != '1'
              run: npm test

            - name: Linting Checks
              if: env.SKIP != '1'
              run: npm run lint

            - name: Code Formatting Checks
              if: env.SKIP != '1'
              run: npm run check

            - name: Set up Docker Buildx
              if: env.SKIP != '1'
              id: buildx
              uses: crazy-max/ghaction-docker-buildx@v3.3.0

            - name: Login to DockerHub
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}

            - name: Enable Docker Content Trust
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              run: echo "DOCKER_CONTENT_TRUST=1" >> $GITHUB_ENV

            - name: Docker Build
              if: env.SKIP != '1'
              run: |
                  docker buildx build \
                      --output "type=image,push=true" \
                      --platform linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le \
                      --build-arg VERSION=${{ env.VERSION }} \
                      --tag ${{ secrets.DOCKER_REGISTRY }}/${{ env.NAME }}:${{ env.VERSION }} \
                      --tag ${{ secrets.DOCKER_REGISTRY }}/${{ env.NAME }}:latest \
                      .

            - name: Git Push
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              run: |
                  git push
                  git push origin ${{ env.VERSION }}
